TYNGO Staff Order eCommerce (Stripe)
* Reference 
o JIRA
o LucidChart
*  TYNGO Staff Order – Features Documentation 
o Version 1.0 · Last updated: June 24, 2025
* Overview
* Design & UI 
o Visual Design
o UI Components
* Branding & Identity 
o Logos
o Brand Colors
* Payment Integration 
o Stripe Integration
o Subscription Management
* Scheduling & Booking 
o Demo Scheduling
* Technical Architecture 
o Frontend Stack
o Component Structure
* Responsive Experience
* Page Content Structure 
o Hero Section
o Features Section
o Pricing Section
o Navigation
* Integrations 
o Stripe
o Office 365
* User Experience 
o Interaction & Navigation
o Accessibility
* Deployment & Delivery 
o Export Options
o Development Workflow
* Performance 
o Optimization
o Monitoring
* Security 
o Data Protection
o Authentication
* Business Enablement 
o Marketing Support
o Lead Generation
* Quality & Testing 
o Code Quality
o Testing Strategy
* Documentation 
o Developer Docs
o User Docs
* Maintenance 
o Update Management
o System Monitoring
Reference
JIRA
TNG4-12088 - Getting issue details... STATUS 
LucidChart
No Lucidchart macro data was provided. 
Certainly. Here's a rewritten and streamlined version of your TYNGO Staff Order - Features Documentation, preserving the structure and content while improving clarity, tone, and consistency:

TYNGO Staff Order – Features Documentation
Version 1.0 · Last updated: June 24, 2025
Project: TYNGO Staff Order Website

Overview
This document outlines all features developed for the TYNGO Staff Order website, covering the design, technical architecture, integrations, user experience, and business functionality.

Design & UI
Visual Design
* Modern, gradient-based UI with smooth animations
* Glassmorphism effects (blurred backgrounds) for a polished aesthetic
* Responsive layout for desktop and mobile
* Professional color scheme aligned with the TYNGO brand
* Custom branding with logo and colors
UI Components
* Custom TYNGO SVG logo with brand gradients
* Interactive buttons with hover and scale effects
* Animated loaders for visual feedback
* Smooth scrolling between sections
* Typography using the Inter font

Branding & Identity
Logos
* Header: Blue gradient
* Footer: White gradient on dark background
* Inline SVG for reliable rendering
* Responsive scaling across screen sizes
Brand Colors
* TYNGO Blue: hsl(217, 91%, 60%)
* TYNGO Dark: hsl(224, 76%, 48%)
* TYNGO Green: hsl(158, 64%, 52%)
* TYNGO Gray: hsl(215, 20%, 65%)

Payment Integration
Stripe Integration
* Live pricing table: prctbl_1RdSbDG13KD7SzkS3yYckCFn
* Horizontal layout for desktop, responsive on mobile
* Auto-loading scripts with error fallback
Subscription Management
* Direct Stripe billing portal:
https://billing.stripe.com/p/login/test_3cIbJ11DO980ccdb2587K00
* Secure links with proper attributes
* Streamlined experience, no intermediate forms
No Lucidchart macro data was provided. 

Scheduling & Booking
Demo Scheduling
* Office 365 Bookings integration
* Reusable ScheduleDemoButton component with configurable link
* External link handling opens in a new tab
* User instructions provided

Technical Architecture
Frontend Stack
* React + TypeScript for typed, component-based development
* Vite for fast builds
* Tailwind CSS for utility-first styling
* shadcn/ui for UI consistency
* Wouter for client-side routing
Component Structure
* Modular components for reusability
* Sections: Hero, Features, Pricing, Navigation, Footer
* Sticky header and structured navigation
* Professional layout with scalable structure

Responsive Experience
* Mobile-first approach with defined breakpoints
* Optimized desktop layout
* Touch support
* Cross-device compatibility

Page Content Structure
Hero Section
* Headline with gradient effect
* Clear value proposition
* Primary CTA: Schedule a demo
* Brand positioning: Next-gen technology
Features Section
Six core offerings:
* Table-Side Ordering – Mobile-first order placement
* Oracle Simphony Integration – POS synchronization
* Increased Revenue – Performance uplift
* Real-Time Updates – Instant system sync
* Analytics & Reporting – Data insights
* Professional Onboarding – Guided implementation
Pricing Section
* Live Stripe table embedded
* Backdrops and gradients for visual clarity
* Responsive and comparison-ready layout
Navigation
* Sticky header with backdrop blur
* Smooth section scroll
* Structured footer with categorized links

Integrations
Stripe
* Live pricing tables
* Customer billing portal
* Secure transactions
* Test environment for development
Office 365
* Direct booking links
* Calendar integration
* Professional meeting management

User Experience
Interaction & Navigation
* Clear structure and easy access
* Interactive hover effects
* Animated transitions
* Async loaders for feedback
Accessibility
* Alt text for media
* Semantic HTML
* Keyboard focus handling
* Contrast ratios meet WCAG standards

Deployment & Delivery
Export Options
* Self-contained HTML for sharing
* CDN links for libraries
* Client-ready for demo distribution
Development Workflow
* Hot module reload
* TypeScript validation
* Vite build automation
* Live development server

Performance
Optimization
* Lazy loading for images/components
* Minified assets
* Bundled output via Vite
* CDN-hosted dependencies
Monitoring
* Error boundaries
* Console debug tools
* Performance tracking hooks

Security
Data Protection
* Secure link attributes (noopener, noreferrer)
* XSS protection
* HTTPS enforcement
* Sanitized inputs
Authentication
* Handled via Stripe
* Secure booking links
* No sensitive data stored on client

Business Enablement
Marketing Support
* Clear feature presentation
* Value-driven messaging
* Comparison-ready displays
* Customer testimonials (planned)
Lead Generation
* CTA-driven demo scheduling
* Contact channels
* Inquiry flows
* Optimized conversion path

Quality & Testing
Code Quality
* Strict typing with TypeScript
* Component-based structure
* Centralized styling
* Error handling routines
Testing Strategy
* Unit-testable components
* Mock-ready architecture
* Integration test pathways
* End-to-end test capability

Documentation
Developer Docs
* Component API references
* Integration guides
* Deployment steps
* Configuration instructions
User Docs
* Clear feature explanations
* Setup guidance
* Support documentation
* Expandable FAQ structure

Maintenance
Update Management
* Version control via Git
* Dependency tracking with package.json
* Configurable via env variables
* Prop-based content updates
System Monitoring
* Error tracking tools
* User interaction logging
* Performance metrics hooks
* Business analytics
